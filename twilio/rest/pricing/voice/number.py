# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

from twilio import values
from twilio.rest.base import InstanceContext
from twilio.rest.base import InstanceResource


class NumberContext(InstanceContext):

    def __init__(self, domain, number):
        super(NumberContext, self).__init__(domain)
        
        # Path Solution
        self._instance_kwargs = {
            'number': number,
        }
        self._uri = "/Voice/Numbers/{number}".format(**self._instance_kwargs)

    def fetch(self):
        params = values.of({})
        
        return self._domain.fetch(
            NumberInstance,
            self._instance_kwargs,
            'GET',
            self._uri,
            params=params,
        )


class NumberInstance(InstanceResource):

    def __init__(self, domain, payload, number=None):
        super(NumberInstance, self).__init__(domain)
        
        # Marshaled Properties
        self._number = payload['number']
        self._country = payload['country']
        self._iso_country = payload['iso_country']
        self._outbound_call_price = payload['outbound_call_price']
        self._inbound_call_price = payload['inbound_call_price']
        self._price_unit = payload['price_unit']
        self._uri = payload['uri']
        
        # Context
        self._lazy_context = None
        self._context_number = number or self._number

    @property
    def _context(self):
        if self._lazy_context is None:
            self._lazy_context = NumberContext(
                self._domain,
                self._context_number,
            )
        return self._lazy_context

    @property
    def number(self):
        """ The number """
        return self._number

    @property
    def country(self):
        """ The country """
        return self._country

    @property
    def iso_country(self):
        """ The iso_country """
        return self._iso_country

    @property
    def outbound_call_price(self):
        """ The outbound_call_price """
        return self._outbound_call_price

    @property
    def inbound_call_price(self):
        """ The inbound_call_price """
        return self._inbound_call_price

    @property
    def price_unit(self):
        """ The price_unit """
        return self._price_unit

    @property
    def uri(self):
        """ The uri """
        return self._uri

    def fetch(self):
        self._context.fetch()
