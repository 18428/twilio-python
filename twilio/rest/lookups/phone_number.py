# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

from twilio import values
from twilio.rest.base import InstanceContext
from twilio.rest.base import InstanceResource


class PhoneNumberContext(InstanceContext):

    def __init__(self, domain, phone_number):
        super(PhoneNumberContext, self).__init__(domain)
        
        # Path Solution
        self._instance_kwargs = {
            'phone_number': phone_number,
        }
        self._uri = "/PhoneNumbers/{phone_number}".format(**self._instance_kwargs)

    def fetch(self, country_code=values.unset, type=values.unset):
        return self._domain.fetch(
            PhoneNumberInstance,
            self._instance_kwargs,
            'GET',
            self._uri,
        )


class PhoneNumberInstance(InstanceResource):

    def __init__(self, domain, payload, phone_number=None):
        super(PhoneNumberInstance, self).__init__(domain)
        
        # Marshaled Properties
        self._country_code = payload['country_code']
        self._phone_number = payload['phone_number']
        self._national_format = payload['national_format']
        self._mobile_country_code = payload['mobile_country_code']
        self._mobile_network_code = payload['mobile_network_code']
        self._name = payload['name']
        self._type = payload['type']
        self._carrier = payload['carrier']
        
        # Context
        self._lazy_context = None
        self._context_phone_number = phone_number or self._phone_number

    @property
    def _context(self):
        if self._lazy_context is None:
            self._lazy_context = PhoneNumberContext(
                self._domain,
                self._context_phone_number,
            )
        return self._lazy_context

    @property
    def country_code(self):
        """ The country_code """
        return self._country_code

    @property
    def phone_number(self):
        """ The phone_number """
        return self._phone_number

    @property
    def national_format(self):
        """ The national_format """
        return self._national_format

    @property
    def mobile_country_code(self):
        """ The mobile_country_code """
        return self._mobile_country_code

    @property
    def mobile_network_code(self):
        """ The mobile_network_code """
        return self._mobile_network_code

    @property
    def name(self):
        """ The name """
        return self._name

    @property
    def type(self):
        """ The type """
        return self._type

    @property
    def carrier(self):
        """ The carrier """
        return self._carrier

    def fetch(self, country_code=values.unset, type=values.unset):
        self._context.fetch(
            country_code=country_code,
            type=type,
        )
