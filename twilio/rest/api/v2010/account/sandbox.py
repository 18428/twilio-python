# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

from twilio import values
from twilio.rest import deserialize
from twilio.rest.base import InstanceContext
from twilio.rest.base import InstanceResource


class SandboxContext(InstanceContext):

    def __init__(self, version, account_sid):
        super(SandboxContext, self).__init__(version)
        
        # Path Solution
        self._kwargs = {
            'account_sid': account_sid,
        }
        self._uri = "/Accounts/{account_sid}/Sandbox.json".format(**self._kwargs)

    def fetch(self):
        params = values.of({})
        
        return self._version.fetch(
            SandboxInstance,
            self._kwargs,
            'GET',
            self._uri,
            params=params,
        )

    def update(self, voice_url=values.unset, voice_method=values.unset,
               sms_url=values.unset, sms_method=values.unset,
               status_callback=values.unset, status_callback_method=values.unset):
        data = values.of({
            "VoiceUrl": voice_url,
            "VoiceMethod": voice_method,
            "SmsUrl": sms_url,
            "SmsMethod": sms_method,
            "StatusCallback": status_callback,
            "StatusCallbackMethod": status_callback_method,
        })
        
        return self._version.update(
            SandboxInstance,
            self._kwargs,
            'POST',
            self._uri,
            data=data,
        )


class SandboxInstance(InstanceResource):

    def __init__(self, version, payload, account_sid=None):
        super(SandboxInstance, self).__init__(version)
        
        # Marshaled Properties
        self._properties = {
            'date_created': deserialize.rfc2822_datetime(payload['date_created']),
            'date_updated': deserialize.rfc2822_datetime(payload['date_updated']),
            'pin': payload['pin'],
            'account_sid': payload['account_sid'],
            'phone_number': payload['phone_number'],
            'application_sid': payload['application_sid'],
            'api_version': payload['api_version'],
            'voice_url': payload['voice_url'],
            'voice_method': payload['voice_method'],
            'sms_url': payload['sms_url'],
            'sms_method': payload['sms_method'],
            'status_callback': payload['status_callback'],
            'status_callback_method': payload['status_callback_method'],
            'uri': payload['uri'],
        }
        
        # Context
        self._lazy_context = None
        self._context_properties = {
            'account_sid': account_sid or self._properties['account_sid'],
        }

    @property
    def _context(self):
        if self._lazy_context is None:
            self._lazy_context = SandboxContext(
                self._version,
                self._context_properties['account_sid'],
            )
        return self._lazy_context

    @property
    def date_created(self):
        """ The date_created """
        return self._properties['date_created']

    @property
    def date_updated(self):
        """ The date_updated """
        return self._properties['date_updated']

    @property
    def pin(self):
        """ The pin """
        return self._properties['pin']

    @property
    def account_sid(self):
        """ The account_sid """
        return self._properties['account_sid']

    @property
    def phone_number(self):
        """ The phone_number """
        return self._properties['phone_number']

    @property
    def application_sid(self):
        """ The application_sid """
        return self._properties['application_sid']

    @property
    def api_version(self):
        """ The api_version """
        return self._properties['api_version']

    @property
    def voice_url(self):
        """ The voice_url """
        return self._properties['voice_url']

    @property
    def voice_method(self):
        """ The voice_method """
        return self._properties['voice_method']

    @property
    def sms_url(self):
        """ The sms_url """
        return self._properties['sms_url']

    @property
    def sms_method(self):
        """ The sms_method """
        return self._properties['sms_method']

    @property
    def status_callback(self):
        """ The status_callback """
        return self._properties['status_callback']

    @property
    def status_callback_method(self):
        """ The status_callback_method """
        return self._properties['status_callback_method']

    @property
    def uri(self):
        """ The uri """
        return self._properties['uri']

    def fetch(self):
        self._context.fetch()

    def update(self, voice_url=values.unset, voice_method=values.unset,
               sms_url=values.unset, sms_method=values.unset,
               status_callback=values.unset, status_callback_method=values.unset):
        self._context.update(
            voice_url=voice_url,
            voice_method=voice_method,
            sms_url=sms_url,
            sms_method=sms_method,
            status_callback=status_callback,
            status_callback_method=status_callback_method,
        )
