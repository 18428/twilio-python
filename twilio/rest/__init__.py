# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

import os
from twilio.exceptions import TwilioException
from twilio.http.httplib2_client import Httplib2Client
from twilio.rest.conversations import Conversations
from twilio.rest.lookups import Lookups
from twilio.rest.monitor import Monitor
from twilio.rest.pricing import Pricing
from twilio.rest.taskrouter import Taskrouter
from twilio.rest.trunking import Trunking
from twilio.rest.v2010 import V2010


class Twilio(object):
    """ A client for accessing the Twilio API. """

    def __init__(self, account_sid=None, auth_token=None, http_client=None,
                 environment=None):
        environment = environment or os.environ
        
        account_sid = account_sid or environment.get('TWILIO_ACCOUNT_SID')
        auth_token = auth_token or environment.get('TWILIO_AUTH_TOKEN')
        
        if not account_sid or not auth_token:
            raise TwilioException("Credentials are required to create a TwilioClient")
        
        self.auth = (account_sid, auth_token)
        self.http_client = http_client or Httplib2Client()
        
        self._conversations = None
        self._lookups = None
        self._monitor = None
        self._pricing = None
        self._taskrouter = None
        self._trunking = None
        self._v2010 = None

    def request(self, method, uri, params=None, data=None, headers=None, auth=None,
                timeout=None, allow_redirects=False):
        auth = auth or self.auth
        return self.http_client.request(
            method,
            uri,
            params=params,
            data=data,
            headers=headers,
            auth=auth,
            timeout=timeout,
            allow_redirects=allow_redirects
        )

    @property
    def conversations(self):
        """
        Access the Conversations Twilio Domain
        
        :returns: Conversations Twilio Domain
        :rtype: twilio.rest.conversations.Conversations
        """
        if self._conversations is None:
            self._conversations = Conversations(self)
        return self._conversations

    @property
    def lookups(self):
        """
        Access the Lookups Twilio Domain
        
        :returns: Lookups Twilio Domain
        :rtype: twilio.rest.lookups.Lookups
        """
        if self._lookups is None:
            self._lookups = Lookups(self)
        return self._lookups

    @property
    def monitor(self):
        """
        Access the Monitor Twilio Domain
        
        :returns: Monitor Twilio Domain
        :rtype: twilio.rest.monitor.Monitor
        """
        if self._monitor is None:
            self._monitor = Monitor(self)
        return self._monitor

    @property
    def pricing(self):
        """
        Access the Pricing Twilio Domain
        
        :returns: Pricing Twilio Domain
        :rtype: twilio.rest.pricing.Pricing
        """
        if self._pricing is None:
            self._pricing = Pricing(self)
        return self._pricing

    @property
    def taskrouter(self):
        """
        Access the Taskrouter Twilio Domain
        
        :returns: Taskrouter Twilio Domain
        :rtype: twilio.rest.taskrouter.Taskrouter
        """
        if self._taskrouter is None:
            self._taskrouter = Taskrouter(self)
        return self._taskrouter

    @property
    def trunking(self):
        """
        Access the Trunking Twilio Domain
        
        :returns: Trunking Twilio Domain
        :rtype: twilio.rest.trunking.Trunking
        """
        if self._trunking is None:
            self._trunking = Trunking(self)
        return self._trunking

    @property
    def v2010(self):
        """
        Access the V2010 Twilio Domain
        
        :returns: V2010 Twilio Domain
        :rtype: twilio.rest.v2010.V2010
        """
        if self._v2010 is None:
            self._v2010 = V2010(self)
        return self._v2010
