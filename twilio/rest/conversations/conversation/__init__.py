# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

from twilio import values
from twilio.rest import deserialize
from twilio.rest.base import InstanceContext
from twilio.rest.base import InstanceResource
from twilio.rest.v2010.conversation.participant import ParticipantList


class ConversationContext(InstanceContext):

    def __init__(self, domain, sid):
        super(ConversationContext, self).__init__(domain)
        
        # Path Solution
        self._instance_kwargs = {
            'sid': sid,
        }
        self._uri = "/Conversations/{sid}".format(**self._instance_kwargs)
        
        # Dependents
        self._participants = None

    def fetch(self):
        params = values.of({})
        
        return self._domain.fetch(
            ConversationInstance,
            self._instance_kwargs,
            'GET',
            self._uri,
            params=params,
        )

    @property
    def participants(self):
        if self._participants is None:
            self._participants = ParticipantList(
                self._domain,
                conversation_sid=self._instance_kwargs['sid'],
            )
        return self._participants


class ConversationInstance(InstanceResource):

    def __init__(self, domain, payload, sid=None):
        super(ConversationInstance, self).__init__(domain)
        
        # Marshaled Properties
        self._sid = payload['sid']
        self._status = payload['status']
        self._duration = payload['duration']
        self._date_created = deserialize.iso8601_datetime(payload['date_created'])
        self._start_time = deserialize.iso8601_datetime(payload['start_time'])
        self._end_time = deserialize.iso8601_datetime(payload['end_time'])
        self._account_sid = payload['account_sid']
        self._url = payload['url']
        
        # Context
        self._lazy_context = None
        self._context_sid = sid or self._sid

    @property
    def _context(self):
        if self._lazy_context is None:
            self._lazy_context = ConversationContext(
                self._domain,
                self._context_sid,
            )
        return self._lazy_context

    @property
    def sid(self):
        """ The sid """
        return self._sid

    @property
    def status(self):
        """ The status """
        return self._status

    @property
    def duration(self):
        """ The duration """
        return self._duration

    @property
    def date_created(self):
        """ The date_created """
        return self._date_created

    @property
    def start_time(self):
        """ The start_time """
        return self._start_time

    @property
    def end_time(self):
        """ The end_time """
        return self._end_time

    @property
    def account_sid(self):
        """ The account_sid """
        return self._account_sid

    @property
    def url(self):
        """ The url """
        return self._url

    def fetch(self):
        self._context.fetch()
