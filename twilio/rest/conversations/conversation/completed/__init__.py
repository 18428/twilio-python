# coding=utf-8
"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /       
"""

from twilio.rest import (
    deserialize,
    serialize,
)
from twilio.rest.resources.base import NextGenInstanceResource
from twilio.rest.conversations.conversation.participant import (
    Participant,
    Participants,
)
from twilio.rest.resources.base import NextGenListResource


class Completed(NextGenInstanceResource):
    """
    .. attribute:: sid
    
        The sid
    
    .. attribute:: status
    
        The status
    
    .. attribute:: duration
    
        The duration
    
    .. attribute:: date_created
    
        The date_created
    
    .. attribute:: start_time
    
        The start_time
    
    .. attribute:: end_time
    
        The end_time
    
    .. attribute:: account_sid
    
        The account_sid
    
    .. attribute:: url
    
        The url
    """
    id_key = "sid"
    CREATED = "created"
    ENDED = "ended"
    FAILED = "failed"
    IN_PROGRESS = "in-progress"
    subresources = [
        Participants
    ]

    def load(self, *args, **kwargs):
        super(Completed, self).load(*args, **kwargs)
        
        if hasattr(self, "date_created") and self.date_created:
            self.date_created = deserialize.iso8601_datetime(self.date_created)
        
        if hasattr(self, "start_time") and self.start_time:
            self.start_time = deserialize.iso8601_datetime(self.start_time)
        
        if hasattr(self, "end_time") and self.end_time:
            self.end_time = deserialize.iso8601_datetime(self.end_time)


class Completeds(NextGenListResource):
    name = "Conversations/Completed"
    mount_name = "completed"
    key = "conversations"
    instance = Completed

    def __init__(self, *args, **kwargs):
        super(Completeds, self).__init__(*args, **kwargs)

    def list(self, **kwargs):
        """
        Retrieve a collection of :class:`Completed`
        
        :raises TwilioRestException: when the request fails on execute
        
        :rtype: :class:`ListQuery`
        :returns: A ListQuery when executed returns a list of :class:`Completed`
        """
        return self.get_instances(kwargs)

    def iter(self, **kwargs):
        """
        Return all instances of :class:`Completed` using an iterator
        
        :raises TwilioRestException: when the request fails on execute
        
        :returns: An iterator to fetch all :class:`Completed`
        """
        return super(Completeds, self).iter(**kwargs)
